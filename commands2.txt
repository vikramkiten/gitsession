    1  slavust@slavust-laptop:~$ uname -or
    2  4.15.0-20-generic GNU/Linux
    3  slavust@slavust-laptop:~$ lsb_release -irc
    4  Distributor ID:	LinuxMint
    5  Release:	19.1
    6  Codename:	tessa
    7  #!/bin/bash
    8  files=(   jquery-jvectormap.js   lib/jquery-mousewheel.js   src/jvectormap.js   src/abstract-element.js   src/abstract-canvas-element.js   src/abstract-shape-element.js   src/svg-element.js   src/svg-group-element.js   src/svg-canvas-element.js   src/svg-shape-element.js   src/svg-path-element.js   src/svg-circle-element.js   src/svg-image-element.js   src/svg-text-element.js   src/vml-element.js   src/vml-group-element.js   src/vml-canvas-element.js   src/vml-shape-element.js   src/vml-path-element.js   src/vml-circle-element.js   src/vector-canvas.js   src/simple-scale.js   src/ordinal-scale.js   src/numeric-scale.js   src/color-scale.js   src/legend.js   src/data-series.js   src/proj.js   src/map-object.js   src/region.js   src/marker.js   src/map.js   src/multimap.js )
    9  baseDir=`dirname $0`
   10  counter=0
   11  while [ $counter -lt ${#files[@]} ]; do   files[$counter]="$baseDir/${files[$counter]}";   let counter=counter+1; done
   12  if [ -z "$1" ];   then     minified=jquery.jvectormap.min.js;   else     minified=$1; fi
   13  if [ -a $minified ];   then     rm $minified; fi
   14  cat ${files[*]} >> $minified
   15  uglifyjs $minified -o $minified -c
   16  history 
   17  pwd
   18  D;
   19  D:
   20  cd D:
   21  pwd
   22  cd gitPractice/
   23  ls
   24  ls -a
   25  ls 
   26  ls -a
   27  git ls-files
   28  echo "Good Afternoon" >> afternoon.txt
   29  git add .
   30  git status
   31  git rm --cached afternoon.txt
   32  git status
   33  git log
   34  vi afternoon.txt
   35  cat afternoon.txt
   36  git status
   37  git commit -a
   38  git add .
   39  git commit -a
   40  cat afternoon.txt 
   41  git log
   42  git config --global --edit
   43  history
   44  history >> commands2.txt
   45  git commit --amend --reset-author
   46  git add .
   47  git commit -a
   48  git status
   49  git branch
   50  git branch dev
   51  git branch
   52  git checkout -b dev
   53  git checkout dev
   54  git branch
   55  history >> commands2.txt
   56  cat commands2.txt
   57  git status
   58  git commit .
   59  git checkout master
   60  ls
   61  cat commands2.txt
   62  git ls-files
   63  git checkout de
   64  git checkout dev
   65  git ls-files
   66  git checkout master
   67  git merge
   68  git merge master
   69  git merge dev
   70  git branch
   71  git ls-files
   72  cat commands2.txt 
   73  git checkout dev
   74  git checkout dev
   75  cat commands2.txt 
   76  history >> commands2.txt
   77  git add .
   78  git commit -m "Updated commands2.txt"
   79  git merge dev
   80  git merge master
   81  git  checkout master
   82  git merge dev
   83  git ls-files
   84  echo "Morning" > afternoon.txt 
   85  cat afternoon.txt 
   86  git commit
   87  git commit .
   88  git checkout dev
   89  git ls-files
   90  echo "afternoon" > afternoon.txt 
   91  git commit .
   92  git checkout master
   93  git merge dev
   94  git config merge.tool vimdiff
   95  git config merge.conflictStyle diff3
   96  git config mergetool.prompt false
   97  git mergetool
   98  git branch
   99  git ls-files
  100  cat afternoon.txt
  101  git checkout dev
  102  git ls-files
  103  cat afternoon.txt
  104  git chekout dev
  105  git checkout dev
  106  git --help
  107  git show
  108  git log
  109  git checkout dev
  110  git merge dev
  111  git commit .
  112  git add .
  113  git commit .
  114  git branch
  115  git status
  116  git commit . -a
  117  git commit  -a
  118  history >> commands2.txt 
  119  cat commands2.txt `
;
;
;;
`
  120  cat commands2.txt 
  121  history > commands2.txt 
